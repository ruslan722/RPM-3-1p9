from fastapi import FastAPI  # Импортируем FastAPI для создания веб-приложения
from typing import List  # Импортируем List для аннотации типа возвращаемого результата
import uvicorn  # Импортируем uvicorn для запуска ASGI-сервера
#Создаем экземпляр приложения FastAPI
app = FastAPI()
 # Параметр n: int - указывает, что аргумент n должен быть целым числом (int)
    # -> int - аннотация типа возвращаемого значения, указывающая, что функция возвращает целое число (int)
def factorial(n: int) -> int:
    if n == 0 or n == 1: # Если n равно 0 или 1, то возвращаем 1, так как 0! и 1! равны 1 
        return 1
    else:
        return n * factorial(n - 1) # В противном случае, рекурсивно вычисляем n * (n-1)!

def reverse_digits(n: int) -> int:
    #Преобразуем число n в строку, чтобы можно было реверсировать его цифры

    return int(str(n)[::-1])
# Используем срез [::-1], чтобы развернуть строку в обратном порядке
    # Синтаксис [::-1] означает:
    # - start и stop оставлены пустыми, что означает весь диапазон строки
    # - шаг -1 указывает, что строка должна быть прочитана с конца к началу

@app.get("/reversed_factorials", response_model=List[int])
def get_reversed_factorials(limit: int = 100):
    # Инициализируем пустой список для хранения результатов
    results = []
     # Цикл от 1 до limit (включительно), чтобы вычислить факториалы всех чисел в этом диапазоне
    for i in range(1, limit + 1):
        fact = factorial(i)   # Вычисляем факториал текущего числа i
        reversed_fact = reverse_digits(fact) # Реверсируем цифры полученного факториала
        results.append(reversed_fact) # Добавляем реверсированный факториал в список результатов
    return results #Возвращаем список реверсированных факториалов
# Запуск приложения
if __name__ == "__main__":
    uvicorn.run(app, host="127.0.0.1", port=8000)